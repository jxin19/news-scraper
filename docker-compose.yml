services:
  postgres:
    image: postgres:15.8-alpine
    container_name: ddi-postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_DB: ddi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ddi2505
      TZ: Asia/Seoul
    networks:
      - ddi-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    labels:
      - name=redis
      - mode=standalone
    command: redis-server /usr/local/conf/redis.conf
    networks:
      - ddi-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: ddi-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      - ddi-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ddi-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - ddi-network

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: ddi-schema-registry
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
    depends_on:
      - zookeeper
      - kafka
    networks:
      - ddi-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: ddi-kafka-ui
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    ports:
      - 9091:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: ddi-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
    networks:
      - ddi-network

  ddi-flyway:
    image: ddi-flyway
    container_name: ddi-flyway
    build:
      context: .
      dockerfile: ./flyway/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ddi
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ddi2505
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ddi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ddi2505
    depends_on:
      - postgres
    networks:
      - ddi-network

  ddi-scheduler:
    image: ddi-scheduler
    container_name: ddi-scheduler
    build:
      context: .
      dockerfile: ./scheduler/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ddi
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ddi2505
    depends_on:
      - postgres
      - redis
    networks:
      - ddi-network

  ddi-api:
    image: ddi-api
    container_name: ddi-api
    build:
      context: .
      dockerfile: ./api/Dockerfile
    ports:
      - 8080:8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ddi
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ddi2505
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - postgres
      - redis
      - ddi-flyway
      - ddi-scheduler
    networks:
      - ddi-network

  ddi-scrape-rss:
    image: ddi-scrape-rss
    container_name: ddi-scrape-rss
    build:
      context: .
      dockerfile: ./scrape-rss/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ddi
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ddi2505
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on:
      - postgres
      - redis
      - zookeeper
      - kafka
      - schema-registry
    networks:
      - ddi-network

  ddi-scrape-web:
    image: ddi-scrape-web
    container_name: ddi-scrape-web
    build:
      context: .
      dockerfile: ./scrape-web/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ddi
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ddi2505
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on:
      - postgres
      - redis
      - zookeeper
      - kafka
      - schema-registry
    networks:
      - ddi-network

  ddi-stream-news:
    image: ddi-stream-news
    container_name: ddi-stream-news
    build:
      context: .
      dockerfile: ./stream-news/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ddi
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: ddi2505
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on:
      - postgres
      - redis
      - zookeeper
      - kafka
      - schema-registry
    networks:
      - ddi-network

  ddi-web:
    image: ddi-web
    container_name: ddi-web
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      - API_URL=http://ddi-api:8080
      - NODE_ENV=production
    depends_on:
      - ddi-api
    networks:
      - ddi-network

networks:
  ddi-network:
    driver: bridge
